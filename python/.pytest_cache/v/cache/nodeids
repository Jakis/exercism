[
  "bob/bob_test.py::BobTest::test_alternate_silence", 
  "bob/bob_test.py::BobTest::test_asking_a_numeric_question", 
  "bob/bob_test.py::BobTest::test_asking_a_question", 
  "bob/bob_test.py::BobTest::test_asking_gibberish", 
  "bob/bob_test.py::BobTest::test_ending_with_whitespace", 
  "bob/bob_test.py::BobTest::test_forceful_question", 
  "bob/bob_test.py::BobTest::test_multiple_line_question", 
  "bob/bob_test.py::BobTest::test_non_letters_with_question", 
  "bob/bob_test.py::BobTest::test_non_question_ending_with_whitespace", 
  "bob/bob_test.py::BobTest::test_only_numbers", 
  "bob/bob_test.py::BobTest::test_other_whitespace", 
  "bob/bob_test.py::BobTest::test_prattling_on", 
  "bob/bob_test.py::BobTest::test_prolonged_silence", 
  "bob/bob_test.py::BobTest::test_question_with_only_numbers", 
  "bob/bob_test.py::BobTest::test_shouting", 
  "bob/bob_test.py::BobTest::test_shouting_gibberish", 
  "bob/bob_test.py::BobTest::test_shouting_numbers", 
  "bob/bob_test.py::BobTest::test_shouting_with_no_exclamation_mark", 
  "bob/bob_test.py::BobTest::test_shouting_with_special_characters", 
  "bob/bob_test.py::BobTest::test_silence", 
  "bob/bob_test.py::BobTest::test_starting_with_whitespace", 
  "bob/bob_test.py::BobTest::test_statement_containing_question_mark", 
  "bob/bob_test.py::BobTest::test_stating_something", 
  "bob/bob_test.py::BobTest::test_talking_forcefully", 
  "bob/bob_test.py::BobTest::test_using_acronyms_in_regular_speech", 
  "gigasecond/gigasecond_test.py::GigasecondTest::test_another_date_only_specification_of_time", 
  "gigasecond/gigasecond_test.py::GigasecondTest::test_date_only_specification_of_time", 
  "gigasecond/gigasecond_test.py::GigasecondTest::test_full_time_specified", 
  "gigasecond/gigasecond_test.py::GigasecondTest::test_full_time_with_day_roll_over", 
  "gigasecond/gigasecond_test.py::GigasecondTest::test_one_more_date_only_specification_of_time", 
  "gigasecond/gigasecond_test.py::GigasecondTest::test_yourself", 
  "hamming/hamming_test.py::HammingTest::test_complete_distance_in_single_nucleotide_strands", 
  "hamming/hamming_test.py::HammingTest::test_complete_distance_in_small_strands", 
  "hamming/hamming_test.py::HammingTest::test_disallow_first_strand_longer", 
  "hamming/hamming_test.py::HammingTest::test_disallow_second_strand_longer", 
  "hamming/hamming_test.py::HammingTest::test_empty_strands", 
  "hamming/hamming_test.py::HammingTest::test_identical_strands", 
  "hamming/hamming_test.py::HammingTest::test_large_distance", 
  "hamming/hamming_test.py::HammingTest::test_large_distance_in_off_by_one_strand", 
  "hamming/hamming_test.py::HammingTest::test_long_identical_strands", 
  "hamming/hamming_test.py::HammingTest::test_non_unique_character_in_first_strand", 
  "hamming/hamming_test.py::HammingTest::test_non_unique_character_in_second_strand", 
  "hamming/hamming_test.py::HammingTest::test_same_nucleotides_in_different_positions", 
  "hamming/hamming_test.py::HammingTest::test_small_distance", 
  "hamming/hamming_test.py::HammingTest::test_small_distance_in_long_strands", 
  "hamming/hamming_test.py::HammingTest::test_small_distance_in_small_strands", 
  "hello-world/hello_world_test.py::HelloWorldTests::test_hello", 
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_input_is_nine_characters", 
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_invalid_X_other_than_check_digit", 
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_invalid_character_in_isbn", 
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_invalid_check_digit", 
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_invalid_check_digit_X_used_for_0", 
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_invalid_check_digit_other_than_X", 
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_invalid_isbn_without_check_digit", 
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_invalid_isbn_without_check_digit_and_dashes", 
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_invalid_too_long_isbn", 
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_invalid_too_long_isbn_with_no_dashes", 
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_valid_empty_isbn", 
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_valid_isbn_number", 
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_valid_isbn_without_separating_dashes", 
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_valid_isbn_without_separating_dashes_with_X_check_digit", 
  "isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_valid_with_X_check_digit", 
  "isogram/isogram_test.py::IsogramTest::test_duplicated_character_in_the_middle", 
  "isogram/isogram_test.py::IsogramTest::test_empty_string", 
  "isogram/isogram_test.py::IsogramTest::test_hypothetical_isogrammic_word_with_hyphen", 
  "isogram/isogram_test.py::IsogramTest::test_isogram_with_duplicated_hyphen", 
  "isogram/isogram_test.py::IsogramTest::test_isogram_with_duplicated_letter_and_nonletter_character", 
  "isogram/isogram_test.py::IsogramTest::test_isogram_with_only_lower_case_characters", 
  "isogram/isogram_test.py::IsogramTest::test_longest_reported_english_isogram", 
  "isogram/isogram_test.py::IsogramTest::test_made_up_name_that_is_an_isogram", 
  "isogram/isogram_test.py::IsogramTest::test_word_with_duplicated_character_in_mixed_case", 
  "isogram/isogram_test.py::IsogramTest::test_word_with_one_duplicated_character", 
  "leap/leap_test.py::LeapTest::test_year_divisible_by_100_not_divisible_by_400", 
  "leap/leap_test.py::LeapTest::test_year_divisible_by_400", 
  "leap/leap_test.py::LeapTest::test_year_divisible_by_4_not_divisible_by_100", 
  "leap/leap_test.py::LeapTest::test_year_not_divisible_by_4", 
  "pangram/pangram_test.py::PangramTest::test_another_missing_character", 
  "pangram/pangram_test.py::PangramTest::test_missing_character_x", 
  "pangram/pangram_test.py::PangramTest::test_missing_letters_replaced_by_numbers", 
  "pangram/pangram_test.py::PangramTest::test_pangram_with_mixedcase_and_punctuation", 
  "pangram/pangram_test.py::PangramTest::test_pangram_with_numbers", 
  "pangram/pangram_test.py::PangramTest::test_pangram_with_only_lower_case", 
  "pangram/pangram_test.py::PangramTest::test_pangram_with_underscores", 
  "pangram/pangram_test.py::PangramTest::test_recognizes_a_perfect_lower_case_pangram", 
  "pangram/pangram_test.py::PangramTest::test_sentence_empty", 
  "pangram/pangram_test.py::PangramTest::test_upper_and_lower_case_versions_of_the_same_character", 
  "reverse-string/reverse_string_test.py::ReverseStringTest::test_a_capitalized_word", 
  "reverse-string/reverse_string_test.py::ReverseStringTest::test_a_palindrome", 
  "reverse-string/reverse_string_test.py::ReverseStringTest::test_a_sentence_with_punctuation", 
  "reverse-string/reverse_string_test.py::ReverseStringTest::test_a_word", 
  "reverse-string/reverse_string_test.py::ReverseStringTest::test_empty_string", 
  "rna-transcription/rna_transcription_test.py::RnaTranscriptionTest::test_transcribes_adenine_to_uracil", 
  "rna-transcription/rna_transcription_test.py::RnaTranscriptionTest::test_transcribes_all_occurrences", 
  "rna-transcription/rna_transcription_test.py::RnaTranscriptionTest::test_transcribes_cytosine_to_guanine", 
  "rna-transcription/rna_transcription_test.py::RnaTranscriptionTest::test_transcribes_guanine_to_cytosine", 
  "rna-transcription/rna_transcription_test.py::RnaTranscriptionTest::test_transcribes_thymine_to_adenine", 
  "word-count/word_count_test.py::WordCountTest::test_apostrophes", 
  "word-count/word_count_test.py::WordCountTest::test_count_multiple_occurrences_of_a_word", 
  "word-count/word_count_test.py::WordCountTest::test_count_one_of_each", 
  "word-count/word_count_test.py::WordCountTest::test_count_one_word", 
  "word-count/word_count_test.py::WordCountTest::test_cramped_list", 
  "word-count/word_count_test.py::WordCountTest::test_expanded_list", 
  "word-count/word_count_test.py::WordCountTest::test_ignores_punctuation", 
  "word-count/word_count_test.py::WordCountTest::test_include_numbers", 
  "word-count/word_count_test.py::WordCountTest::test_multiple_spaces_not_detected_as_a_word", 
  "word-count/word_count_test.py::WordCountTest::test_non_alphanumeric", 
  "word-count/word_count_test.py::WordCountTest::test_normalize_case", 
  "word-count/word_count_test.py::WordCountTest::test_quotations", 
  "word-count/word_count_test.py::WordCountTest::test_tabs"
]